@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@User.Claims.FirstOrDefault(c => c.Type.Equals("Name",
    StringComparison.OrdinalIgnoreCase))?.Value

<ul class="navbar-nav">
@* @if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
} *@

    @if (User.Identity.IsAuthenticated)
    {
        <span>@User.Claims.FirstOrDefault(c => c.Type.Equals("Name", StringComparison.OrdinalIgnoreCase))?.Value</span>
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-route-returnurl="/" asp-page="/Account/Logout">
            <button id="logout" type="submit" class="btn btn-link">Logout</button>
        </form>
    }
    else
    {
        <a asp-area="Identity" asp-page="/Account/Login" class="btn btn-link">Login</a>
        <a asp-area="Identity" asp-page="/Account/Register" class="btn btn-link">Register</a>
    }
</ul>
